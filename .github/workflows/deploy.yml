name: Deploy Deepseek Model R1  

on:  
  push:  
    branches:  
      - main  
  workflow_dispatch:  

jobs:  
  deploy:  
    runs-on: ubuntu-latest  
    steps:  
      - name: Checkout repository  
        uses: actions/checkout@v3  
        
      - name: Setup Terraform  
        uses: hashicorp/setup-terraform@v2  
        with:  
          terraform_version: "1.5.0"  

      - name: Terraform init  
        run: terraform init  
        
      - name: Terraform Validate  
        run: terraform validate  
        
      - name: Terraform plan  
        run: terraform plan  
        env:  
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}  
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}  
          AWS_REGION: ${{ secrets.AWS_REGION }}  

      - name: Terraform Apply  
        run: terraform apply --auto-approve  
        env:  
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}  
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}  
          AWS_REGION: ${{ secrets.AWS_REGION }}  

      - name: Deploy DeepSeek Model R1
        run: |
            # Save the private key to a file
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > deepseek-key
            chmod 600 deepseek-key
        
            # Get the public IP of the EC2 instance
            INSTANCE_IP=$(terraform output -raw instance_public_ip)
        
            # SSH into the instance and run Docker commands
            ssh -o StrictHostKeyChecking=no -i deepseek-key ubuntu@$INSTANCE_IP << 'EOF'
            sudo docker pull deepseek/model-r1:latest
            sudo docker run -d -p 5000:5000 --name deepseek-model deepseek/model-r1:latest
            EOF

      - name: Get Load Balancer DNS name  
        run: |  
          ALB_DNS=$(terraform output -raw alb_dns_name)  
          echo "Deepseek Model R1 is accessible at: http://$ALB_DNS"  

  cleanup:  
    runs-on: ubuntu-latest  
    needs: deploy  
    if: ${{ github.event_name == 'workflow_dispatch' }}  
    steps:  
      - name: Checkout repository  
        uses: actions/checkout@v3  
        
      - name: Setup Terraform  
        uses: hashicorp/setup-terraform@v2  
        with:  
          terraform_version: "1.5.0"  

      - name: Terraform init  
        run: terraform init  

      - name: Terraform destroy  
        run: terraform destroy --auto-approve  
        env:  
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}  
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}  
          AWS_REGION: ${{ secrets.AWS_REGION }}